package ServiceImpl;

import java.sql.Timestamp;
import java.util.List;

import dao.HistoryDao;
import entily.History;
import entily.User;
import entily.Video;
import impl.HistoryDaoImpl;
import service.HistoryService;
import service.VideoService;
public class HistoryServiceImpl implements HistoryService{

	private HistoryDao dao;
	private VideoService videoService = new VideoServiceImpl();
		
			public HistoryServiceImpl() {
	dao = new HistoryDaoImpl();
}
	@Override
	public List<History> findByUser(String username) {
		// TODO Auto-generated method stub
		return dao.findByUser(username);
	}

	@Override
	public List<History> findByUserAndIsLiked(String username) {
		// TODO Auto-generated method stub
		return dao.findByUserAndIsLiked(username);
	}

	@Override
	public History findByUserIdAndVideoId(Integer userId, Integer videoId) {
		// TODO Auto-generated method stub
		return dao.findByUserIdAndVideoId(userId, videoId);
	}

	@Override
	public History create(User users, Video video) {
		// TODO Auto-generated method stub
		History exisHistory = findByUserIdAndVideoId(users.getId(), video.getId());
		if(exisHistory == null) {
			exisHistory.setUser(users);
			exisHistory.setVideo(video);
			exisHistory.setViewedDate(new Timestamp(System.currentTimeMillis()));
			exisHistory.setIsLiked(Boolean.FALSE);	
			return dao.create(exisHistory);
		}
		
		return exisHistory;
	}

	@Override
	public boolean updateLikeOrUnlike(User users, String videoHref) {
		// TODO Auto-generated method stub
		Video video = videoService.findByHref(videoHref);
		History existHistory = findByUserIdAndVideoId(users.getId(), video.getId());
		if (existHistory.getIsLiked() == Boolean.FALSE) {
			existHistory.setIsLiked(Boolean.TRUE);
			existHistory.setLikeDate(new Timestamp(System.currentTimeMillis()));
		} else {
			existHistory.setIsLiked(Boolean.TRUE);
			existHistory.setIsLiked(null);
		}
		History updateHistory = dao.update(existHistory);
		return updateHistory != null ? true : false;
	}
	
	
}
